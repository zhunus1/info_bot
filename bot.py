import config
import asyncio
import requests
import telegram
from flask import (
    Blueprint, flash, g, redirect, render_template, request, session, url_for
)

from db import get_db

bp = Blueprint('bot', __name__, url_prefix='/bot')
bot = telegram.Bot(token=config.token)


@bp.route('/notify', methods=['POST'])
async def notify_all():
    db = get_db()
    chats = db.execute('SELECT * FROM user')
    for chat in chats:
        print(chat['chat_id'])
        try:
            key = request.headers.get('x-api-key')
            if key == 'Behappy7+':
                notify_text = request.form.get('text')
                bot.sendMessage(chat_id=chat['chat_id'], text=notify_text)
            else:
                return "Bad request", 400
        except:
            return "Bad request", 400
        await asyncio.sleep(0.5)

    return "ok"

@bp.route('/{}'.format(config.token), methods=['POST'])
async def respond():

    db = get_db()

    update = telegram.Update.de_json(request.get_json(force=True), bot)

    if update.my_chat_member:
        return 'ok'
    
    chat_id = update.message.chat.id
    msg_id = update.message.message_id 
    
    if update.message.from_user.first_name:
        username = update.message.from_user.first_name
    else:
        username = update.message.from_user.last_name
    users = db.execute('SELECT * FROM user')

    cur = g.db.cursor()
    cur.execute("""SELECT chat_id
                          ,username
                   FROM user
                   WHERE chat_id=?
                       OR username=?""",
                (chat_id, username))

    result = cur.fetchone()

    if not result:
        db.execute("INSERT INTO user (username, chat_id) VALUES (?, ?)", (username, chat_id),)
        db.commit()
    
    text = update.message.text.encode('utf-8').decode()
    print("got text message :", text)
    if text == "/start":
        bot_welcome = """
        –ü—Ä–∏–≤–µ—Ç, %s! 
        –Ø —Ä–∞–¥–∞, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ë–ï–°–ü–õ–ê–¢–ù–´–ô 3-—Ö –¥–Ω–µ–≤–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥ ,–∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –æ–¥–Ω–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –º–∏–ª–ª–∏–æ–Ω—ã, –∞ –¥—Ä—É–≥–∏–µ —Å—Ç–æ—è—Ç –Ω–∞ –º–µ—Å—Ç–µ ? –ü–æ—á–µ–º—É –∏—Å—Ç–æ—Ä–∏—è –¥–æ–ª–≥–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ ? 
        –¢–∞–∫ –∂–µ —è –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ 7 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–∏ 30 –¥–Ω–µ–π!

        –ü–æ—ç—Ç–æ–º—É, —Å—Ç–∞–≤—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ 11 –¥–µ–∫–∞–±—Ä—è ,—á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å.

        –ï—Å–ª–∏ —Ç—ã –ø–æ–¥–æ–π–¥–µ—à—å –∫ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—é —Ç—Ä–µ–Ω–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –ø–æ—Å–µ—Ç–∏—à—å –≤—Å–µ —Ç—Ä–∏ –¥–Ω—è –∏ –±—É–¥–µ—à—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è, —Ç–æ –∑–∞–º–µ—Ç–∏—à—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã –≤ —Ç–µ—á–µ–Ω–∏–∏ 2—Ö –¥–Ω–µ–π.

        –Ø –≤–µ—Ä—é –≤ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –≤–∞—Å, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç—ã –≤ —Å–µ–±—è –Ω–µ –≤–µ—Ä–∏—à—å –ø–æ–∫–∞ –µ—â—ë - –ø–æ–º–Ω–∏ –º–æ–∏ —Å–ª–æ–≤–∞ üôå
        """ % username
        bot.sendMessage(chat_id=chat_id, text=bot_welcome, reply_to_message_id=msg_id)
        
        traning_description = """
        üî•–¢–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—ã –Ω–∞ —Ç—Ä–µ–Ω–∏–Ω–≥–µ:

        ‚óΩÔ∏è–î–æ–ª–≥–∏ –∏ –∫—Ä–µ–¥–∏—Ç—ã 
        ‚óΩÔ∏è–ü–æ—á–µ–º—É –æ–¥–Ω–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç, –∞ –¥—Ä—É–≥–∏–µ —Å—Ç–æ—è—Ç –Ω–∞ –º–µ—Å—Ç–µ ?
        ‚óΩÔ∏è–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è- –º–Ω–æ–≥–æ –æ–±—É—á–∞—é—Å—å , –Ω–æ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        ‚óΩÔ∏è–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—Ö–∞ –æ—Ç –º–∏–ª–ª–∏–æ–Ω–µ—Ä–∞ 
        ‚óΩÔ∏è7 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∂–∏–∑–Ω–∏ –∑–∞ 30 –¥–Ω–µ–π
        ‚óΩÔ∏è–ß—Ç–æ –º–µ—à–∞–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å–¥–≤–∏–Ω—É—Ç—å—Å—è —Å –º–µ—Å—Ç–∞?
        ‚óΩÔ∏è–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ—é –Ω–∏—à—É –∏ –ø–æ–Ω—è—Ç—å —á–µ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è ?
        ‚óΩÔ∏è–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞

        –ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ - 11 –¥–µ–∫–∞–±—Ä—è –º—ã –Ω–∞—á–∏–Ω–∞–µ–º üî•
        """
        await asyncio.sleep(7)
        bot.sendMessage(chat_id=chat_id, text=traning_description)
    
    return 'ok'

@bp.route('/set_webhook', methods=['GET', 'POST'])
def set_webhook():
   s = bot.setWebhook('{URL}{HOOK}'.format(URL="https://c58b-2-132-74-31.ngrok.io/bot/", HOOK=config.token), allowed_updates=[])
   if s:
       return "webhook setup ok"
   else:
       return "webhook setup failed"