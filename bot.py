import config
import asyncio
import requests
import telegram
from flask import (
    Blueprint, flash, g, redirect, render_template, request, session, url_for
)

from db import get_db
from db import close_db


bp = Blueprint('bot', __name__, url_prefix='/bot')
bot = telegram.Bot(token=config.token)


@bp.route('/notify', methods=['POST'])
async def notify_all():
    db = get_db()

    cur = g.db.cursor()
    cur.execute("SELECT * FROM user")
    chats = cur.fetchall()
    cur.close()
    for chat in chats:
        print(chat['chat_id'])
        try:
            key = request.headers.get('x-api-key')
            if key == 'Behappy7+':
                notify_text = request.form.get('text')
                try:
                    bot.sendMessage(chat_id=chat['chat_id'], text=notify_text)
                except:
                    print('Bot was blocked by the user')
            else:
                return "Bad request", 400
        except:
            return "Bad request", 400
        await asyncio.sleep(0.5)
    close_db()
    return "ok"

@bp.route('/{}'.format(config.token), methods=['POST'])
async def respond():

    db = get_db()

    update = telegram.Update.de_json(request.get_json(force=True), bot)

    if update.my_chat_member:
        return 'ok'
    
    chat_id = update.message.chat.id
    msg_id = update.message.message_id 
    
    if update.message.from_user.first_name:
        username = update.message.from_user.first_name
    else:
        username = update.message.from_user.last_name
    users = db.execute('SELECT * FROM user')

    cur = g.db.cursor()
    cur.execute("""SELECT chat_id
                          ,username
                   FROM user
                   WHERE chat_id=?
                       OR username=?""",
                (chat_id, username))

    result = cur.fetchone()
    cur.close()
    if not result:
        db.execute("INSERT INTO user (username, chat_id) VALUES (?, ?)", (username, chat_id),)
        db.commit()
    
    text = update.message.text.encode('utf-8').decode()
    print("got text message :", text)
    if text == "/start":
        try:
            bot_welcome = '''–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥üëãüèª
            \n–° —Ç–æ–±–æ–π –Ω–∞ —Å–≤—è–∑–∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ –ö—Ä–∏–º–∏–Ω—Å–∫–∞—è 
            \nhttps://www.instagram.com/margo.kriminskaya/
            \n–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è! –í–µ–¥—å —Ç—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –Ω–µ—á—Ç–æ —Ç–∞–∫–æ–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç —Ç–≤–æ—é –∂–∏–∑–Ω—å –Ω–∞ –î–û –∏ –ü–û–°–õ–ïüí´
            \n\–ó–¥–µ—Å—å —Ç–µ–±—è –∂–¥—ë—Ç –º–Ω–æ–≥–æ –∫—Ä—É—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ–∫–∞—á–∫–µ —Ç–≤–æ–µ–≥–æ –º—ã—à–ª–µ–Ω–∏—èüí∏
            \n–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ –ø—Ä—è–º—ã–µ —ç—Ñ–∏—Ä—ã, –∫—É—Ä—Å—ã, –¥–∞–≤–∞—Ç—å –ø–æ–ª—å–∑—É –∏ –∫–æ–Ω–µ—á–Ω–æ –∂–µ –∫–ª–∞—Å—Å–Ω—ã–µ –±–æ–Ω—É—Å—ã!
            \n–ò —á—Ç–æ–±—ã –Ω–µ –±—Ä–æ—Å–∞—Ç—å —Å–ª–æ–≤–∞ –Ω–µ –≤–µ—Ç–µ—Ä, –ø–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –≤ –º–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º–º-–∫–∞–Ω–∞–ª –∏ –∑–∞–±–∏—Ä–∞–π —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫üéÅüëáüèª
            \nhttps://t.me/+B40ZuSe3FUVlZmRi
            '''
            bot.sendPhoto(chat_id=chat_id, photo='AgACAgIAAxkDAAIBZ2G0HIpMpQ68DhGbAm2XpydapYkaAAJevDEbeDagSRXlXKhnlGYUAQADAgADcwADIwQ', caption=bot_welcome)
            
            traning_description = '''üî•–¢–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Ä–∞—Å–∫—Ä—ã—Ç—ã –Ω–∞ —Ç—Ä–µ–Ω–∏–Ω–≥–µ:
            \n‚ñ™Ô∏è–î–æ–ª–≥–∏ –∏ –∫—Ä–µ–¥–∏—Ç—ã\n‚ñ™Ô∏è–ü–æ—á–µ–º—É –æ–¥–Ω–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç, –∞ –¥—Ä—É–≥–∏–µ —Å—Ç–æ—è—Ç –Ω–∞ –º–µ—Å—Ç–µ ?\n‚ñ™Ô∏è–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –º–Ω–æ–≥–æ –æ–±—É—á–∞—é—Å—å, –Ω–æ –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞!\n‚ñ™Ô∏è–°–µ–∫—Ä–µ—Ç —É—Å–ø–µ—Ö–∞ –æ—Ç –º–∏–ª–ª–∏–æ–Ω–µ—Ä–∞ ü§´\n‚ñ™Ô∏è7 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∂–∏–∑–Ω–∏ –∑–∞ 30 –¥–Ω–µ–π!\n‚ñ™Ô∏è–ß—Ç–æ –º–µ—à–∞–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ —Å–¥–≤–∏–Ω—É—Ç—å—Å—è —Å –º–µ—Å—Ç–∞?\n‚ñ™Ô∏è–ö–∞–∫ –Ω–∞–π—Ç–∏ —Å–≤–æ—é –Ω–∏—à—É –∏ –ø–æ–Ω—è—Ç—å —á–µ–º –∑–∞–Ω–∏–º–∞—Ç—å—Å—è?\nüé• –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞!

            \n–ù–µ –ø—Ä–æ–ø—É—Å—Ç–∏ - 11 –¥–µ–∫–∞–±—Ä—è –º—ã –Ω–∞—á–∏–Ω–∞–µ–º! üî•
            '''
            await asyncio.sleep(7)
            bot.sendPhoto(chat_id=chat_id, photo='AgACAgIAAxkDAAIBaWG0HPmT236-pvXt0wlcy-IUczhkAAI2tTEbzZGgSTdnbS8uTPucAQADAgADcwADIwQ', caption=traning_description)

            about = '''
            –ë–ï–°–ü–õ–ê–¢–ù–´–ô –¢–†–ï–ù–ò–ù–ì, –∫–æ—Ç–æ—Ä–æ–≥–æ –º–Ω–æ–≥–∏–µ —Ç–∞–∫ –¥–æ–ª–≥–æ –∂–¥–∞–ª–∏ –æ—Ç –ú–∞—Ä–≥–∞—Ä–∏—Ç—ã –ö—Ä–∏–º–∏–Ω—Å–∫–æ–πüî•

            \nüìå„Ää–ö–∞–∫ –±—ã—Å—Ç—Ä–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –¥–æ–ª–≥–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤? 7 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–æ–≤ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é –∂–∏–∑–Ω–∏ –∑–∞ 30 –¥–Ω–µ–π!„Äã

            \n–¢—Ä–µ–Ω–∏–Ω–≥ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤ –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –¥–Ω–∏‚ÄºÔ∏è

            \n–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∏ —Å–º–æ—Ç—Ä–∏, –ø–æ–∫–∞ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω üëáüèª
            \nhttps://t.me/+B40ZuSe3FUVlZmRi
            '''
            await asyncio.sleep(5)
            bot.send_message(chat_id=chat_id, text=about)
        except:
            print('Bot was blocked by the user')
    close_db()
    return 'ok'

@bp.route('/set_webhook', methods=['GET', 'POST'])
def set_webhook():
   s = bot.setWebhook('{URL}{HOOK}'.format(URL="https://bot.info-platform.com/bot/", HOOK=config.token), allowed_updates=[])
   if s:
       return "webhook setup ok"
   else:
       return "webhook setup failed"